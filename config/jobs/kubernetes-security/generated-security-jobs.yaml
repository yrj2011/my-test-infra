# Autogenerated by genjobs.go, do NOT edit!
# see genjobs.go, which you can run with hack/update-config.sh
presubmits:
  kubernetes-security/kubernetes:
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-aws-eks-1-11-correctness
    labels:
      preset-kubernetes-e2e-aws-eks-1-11: "true"
      preset-kubernetes-e2e-aws-eks-common: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-aws-eks-1-11-correctness
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-aws-eks-1-11-correctness
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=200
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --check-version-skew=false
        - --deployment=eks
        - --provider=eks
        - --gce-ssh=
        - --extract=local
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --minStartupPods=8
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-aws-eks-1-11-correctness
        - --timeout=180m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-aws-eks-1-11-correctness
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        imagePullPolicy: Always
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-aws-eks-1-11-correctness,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    skip_branches:
    - release-1.13
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-e2e-platform-aws: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_e2e
        - --
        - --aws
        - --aws-cluster-domain=test-cncf-aws.k8s.io
        - --build=bazel
        - --cluster=
        - --env=KOPS_LATEST=latest-ci-green.txt
        - --env=KOPS_DEPLOY_LATEST_KUBE=n
        - --env=KUBE_GCS_UPDATE_LATEST=n
        - --env=KUBE_FASTBUILD=true
        - --extract=local
        - --ginkgo-parallel
        - --provider=aws
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-kops-aws
        - --test_args=--ginkgo.flakeAttempts=2 --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|Services.*functioning.*NodePort
        - --timeout=55m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kops-aws,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    skip_branches:
    - release-1.13
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project=k8s-jkns-pr-gce-gpus
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-device-plugin-gpu
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-device-plugin-gpu,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    skip_branches:
    - release-1.13
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-central1-f
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=65m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-central1-f
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=65m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-central1-f
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=65m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-alpha-features
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-alpha-features
    rerun_command: /test pull-security-kubernetes-e2e-gce-alpha-features
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=200
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=KUBE_FEATURE_GATES=AllAlpha=true
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-central1-f
        - --provider=gce
        - --runtime-config=api/all=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-alpha-features
        - --test_args=--ginkgo.focus=\[Feature:(Audit|BlockVolume|PodPreset|ExpandPersistentVolumes|VolumeSubpathEnvExpansion|RunAsGroup|TTLAfterFinished|NodeLease|CSINodeInfo|CSIDriverRegistry|CSISkipAttach)\]|Networking
          --ginkgo.skip=Networking-Performance|IPv6|Feature:Volumes|gcePD-external --minStartupPods=8
        - --timeout=180m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-alpha-features
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-alpha-features,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-containerd-gce
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-containerd: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-containerd-gce
    rerun_command: /test pull-security-kubernetes-e2e-containerd-gce
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --repo=github.com/containerd/cri
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=KUBE_MASTER_EXTRA_METADATA=user-data=/go/src/github.com/containerd/cri/test/e2e/master.yaml,containerd-configure-sh=/go/src/github.com/containerd/cri/cluster/gce/configure.sh,containerd-env=/workspace/test-infra/jobs/e2e_node/containerd/cri-master/env
        - --env=KUBE_NODE_EXTRA_METADATA=user-data=/go/src/github.com/containerd/cri/test/e2e/node.yaml,containerd-configure-sh=/go/src/github.com/containerd/cri/cluster/gce/configure.sh,containerd-env=/workspace/test-infra/jobs/e2e_node/containerd/cri-master/env
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-project=k8s-c8d-pr-e2e
        - --gcp-zone=us-central1-f
        - --ginkgo-parallel=30
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-containerd-gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
          --minStartupPods=8
        - --timeout=65m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-containerd-gce
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-containerd-gce,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-local-e2e-containerized
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-local-e2e-containerized
    optional: true
    rerun_command: /test pull-security-kubernetes-local-e2e-containerized
    run_if_changed: ^(pkg|cmd)/kubelet.*$
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=140
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --deployment=local
        - --ginkgo-parallel
        - --provider=local
        - --test_args=--ginkgo.focus=\[Conformance\]|\[Containerized\] --ginkgo.skip=\[Disruptive\]|\[sig\-apps\]\sDaemon\sset\s\[Serial\]\sshould\srollback\swithout\sunnecessary\srestarts\s\[Conformance\]
        - --timeout=120m
        env:
        - name: DOCKERIZE_KUBELET
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            cpu: "2"
            memory: 9000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-local-e2e-containerized,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    skip_branches:
    - release-1.13
    - release-1.12
    - release-1.11
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-central1-f
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-central1-f
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.12
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-central1-f
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.12
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.11
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-central1-f
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.11
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-central1-f
        - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-node-e2e-containerd
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e-containerd
    rerun_command: /test pull-security-kubernetes-node-e2e-containerd
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/cri
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-c8d-pr-node-e2e
        - --gcp-zone=us-central1-f
        - '--node-test-args=--container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock
          --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file=
          --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"
          --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
          --flakeAttempts=2
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/cri-master/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e-containerd,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-node-e2e-alpha
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e-alpha
    rerun_command: /test pull-security-kubernetes-node-e2e-alpha
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=kubernetes_e2e
        - --
        - --deployment=node
        - --gcp-project=k8s-jkns-pr-node-e2e
        - --gcp-zone=us-central1-f
        - --node-test-args=--feature-gates=AllAlpha=true,RotateKubeletServerCertificate=false
          --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeAlphaFeature:.+\]"
          --skip="\[Flaky\]|\[Serial\] --flakeAttempts=2"
        - --timeout=65m
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-node-e2e-alpha,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-cross
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-cross
    rerun_command: /test pull-security-kubernetes-cross
    run_if_changed: ^((build\/|hack\/lib\/).*)|(.*Makefile.*)$
    skip_branches:
    - release-1.9
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=execute
        - --
        - --env=KUBE_RELEASE_RUN_TESTS=n
        - make
        - release
        image: gcr.io/k8s-testimages/bootstrap:v20190110-c23317e88
        name: ""
        resources:
          requests:
            cpu: "7"
            memory: 41Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-cross,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.9
    cluster: security
    context: pull-security-kubernetes-cross
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-cross
    rerun_command: /test pull-security-kubernetes-cross
    run_if_changed: ^(build\/|hack\/lib\/)|(Makefile)|(.*_(windows|linux|osx|unsupported)(_test)?\.go)$
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --scenario=execute
        - --
        - --env=KUBE_RELEASE_RUN_TESTS=n
        - make
        - release
        image: gcr.io/k8s-testimages/bootstrap:v20190110-c23317e88
        name: ""
        resources:
          requests:
            cpu: "7"
            memory: 41Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-cross,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-100-performance
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-scalability-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-100-performance
    rerun_command: /test pull-security-kubernetes-e2e-gce-100-performance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-nodes=100
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-100-performance
        - --tear-down-previous
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --minStartupPods=8 --gather-resource-usage=true
          --gather-metrics-at-teardown=true
        - --timeout=100m
        - --use-logexporter
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-100-performance
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-100-performance,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-big-performance
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-scalability-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-e2e-gce-big-performance
    rerun_command: /test pull-security-kubernetes-e2e-gce-big-performance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=270
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=n1-standard-4
        - --extract=local
        - --gcp-nodes=500
        - --gcp-project=k8s-scale-testing
        - --gcp-zone=us-east1-a
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-big-performance
        - --tear-down-previous
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --minStartupPods=8 --gather-resource-usage=masteranddns
          --gather-metrics-at-teardown=master
        - --timeout=240m
        - --use-logexporter
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-big-performance
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-big-performance,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-large-performance
    labels:
      preset-bazel-scratch-dir: "true"
      preset-e2e-scalability-common: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-e2e-gce-large-performance
    rerun_command: /test pull-security-kubernetes-e2e-gce-large-performance
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=570
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=n1-standard-8
        - --extract=local
        - --gcp-nodes=2000
        - --gcp-project=k8s-scale-testing
        - --gcp-zone=us-east1-a
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-large-performance
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --minStartupPods=8 --gather-resource-usage=masteranddns
          --gather-metrics-at-teardown=master
        - --timeout=540m
        - --use-logexporter
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-large-performance
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-large-performance,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-big: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    skip_branches:
    - release-1.13
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --gather-resource-usage=true
          --gather-metrics-at-teardown=true
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-big: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --gather-resource-usage=true
          --gather-metrics-at-teardown=true
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-big: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-master-size=n1-standard-4
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=7
        - --gcp-project=k8s-presubmit-scale
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-big
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --gather-resource-usage=true
          --gather-metrics-at-teardown=true
        - --timeout=100m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-big,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-scale
    labels:
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-scale: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-kubemark-e2e-gce-scale
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-scale
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=1220
        - --scenario=kubernetes_e2e
        - --
        - --build
        - --cluster=
        - --extract=local
        - --gcp-node-size=n1-standard-8
        - --gcp-nodes=82
        - --gcp-project=k8s-scale-testing
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=5000
        - --provider=gce
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-kubemark-e2e-gce-scale
        - --test=false
        - --test_args=--ginkgo.focus=\[Feature:Performance\] --gather-resource-usage=true
          --gather-metrics-at-teardown=true
        - --timeout=1200m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-scale
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-kubemark-e2e-gce-scale,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-gce-csi-serial
    labels:
      preset-bazel-scratch-dir: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-e2e-gce-csi-serial
    optional: true
    rerun_command: /test pull-security-kubernetes-e2e-gce-csi-serial
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=150
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --cluster=
        - --extract=local
        - --gcp-node-image=gci
        - --gcp-zone=us-central1-f
        - --provider=gce
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        - --stage=gs://kubernetes-release-pull/ci/pull-kubernetes-e2e-gce-csi-serial
        - --test_args=--ginkgo.focus=CSI.*(\[Serial\]|\[Disruptive\]) --ginkgo.skip=\[Flaky\]|\[Feature:.+\]|gcePD-external
          --minStartupPods=8
        - --timeout=120m
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-csi-serial
        - --gcp-project=k8s-jkns-pr-gce-etcd3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-gce-csi-serial,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    run_after_success:
    - agent: kubernetes
      always_run: false
      cluster: security
      context: pull-security-kubernetes-e2e-kubeadm-gce
      labels:
        preset-k8s-ssh: "true"
        preset-service-account: "true"
      max_concurrency: 8
      name: pull-security-kubernetes-e2e-kubeadm-gce
      rerun_command: /test pull-security-kubernetes-e2e-kubeadm-gce
      run_if_changed: ^(cmd/kubeadm|build/debs|pkg/kubelet/certificate|cmd/kubelet/app).*$
      skip_branches:
      - release-1.13
      - release-1.10
      skip_report: true
      spec:
        containers:
        - args:
          - --ssh=/etc/ssh-security/ssh-security
          - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
          - --repo=k8s.io/kubernetes-anywhere=kubeadm-e2e
          - --upload=gs://kubernetes-security-prow/pr-logs
          - --timeout=75
          - --scenario=kubernetes_e2e
          - --
          - --cluster=
          - --deployment=kubernetes-anywhere
          - --gcp-zone=us-central1-f
          - --ginkgo-parallel=30
          - --kubeadm=pull
          - --kubernetes-anywhere-kubernetes-version=ci-cross/latest
          - --provider=kubernetes-anywhere
          - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]
            --minStartupPods=8
          - --timeout=55m
          - --use-shared-build=bazel
          - --gcs-shared=gs://kubernetes-security-prow/bazel
          - --gcp-project=k8s-jkns-pr-gce-etcd3
          env:
          - name: SKIP_RELEASE_VALIDATION
            value: "true"
          image: gcr.io/k8s-testimages/e2e-kubeadm:v20190110-2cba0a6ef
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssh-security
            name: ssh-security
        volumes:
        - name: ssh-security
          secret:
            defaultMode: 256
            secretName: ssh-security
      trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kubeadm-gce,?($|\s.*)
    skip_branches:
    - release-1.13
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    run_after_success:
    - agent: kubernetes
      always_run: false
      branches:
      - release-1.13
      cluster: security
      context: pull-security-kubernetes-e2e-kubeadm-gce
      labels:
        preset-k8s-ssh: "true"
        preset-service-account: "true"
      max_concurrency: 8
      name: pull-security-kubernetes-e2e-kubeadm-gce
      rerun_command: /test pull-security-kubernetes-e2e-kubeadm-gce
      run_if_changed: ^(cmd/kubeadm|build/debs|pkg/kubelet/certificate|cmd/kubelet/app).*$
      skip_report: true
      spec:
        containers:
        - args:
          - --ssh=/etc/ssh-security/ssh-security
          - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
          - --repo=k8s.io/kubernetes-anywhere=kubeadm-e2e
          - --upload=gs://kubernetes-security-prow/pr-logs
          - --timeout=75
          - --scenario=kubernetes_e2e
          - --
          - --cluster=
          - --deployment=kubernetes-anywhere
          - --gcp-zone=us-central1-f
          - --ginkgo-parallel=30
          - --kubeadm=pull
          - --kubernetes-anywhere-kubernetes-version=ci-cross/latest
          - --provider=kubernetes-anywhere
          - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]
            --minStartupPods=8
          - --timeout=55m
          - --use-shared-build=bazel
          - --gcs-shared=gs://kubernetes-security-prow/bazel
          - --gcp-project=k8s-jkns-pr-gce-etcd3
          env:
          - name: SKIP_RELEASE_VALIDATION
            value: "true"
          image: gcr.io/k8s-testimages/e2e-kubeadm:v20190110-2cba0a6ef
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssh-security
            name: ssh-security
        volumes:
        - name: ssh-security
          secret:
            defaultMode: 256
            secretName: ssh-security
      trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kubeadm-gce,?($|\s.*)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    run_after_success:
    - agent: kubernetes
      always_run: false
      branches:
      - release-1.10
      cluster: security
      context: pull-security-kubernetes-e2e-kubeadm-gce
      labels:
        preset-k8s-ssh: "true"
        preset-service-account: "true"
      max_concurrency: 8
      name: pull-security-kubernetes-e2e-kubeadm-gce
      rerun_command: /test pull-security-kubernetes-e2e-kubeadm-gce
      run_if_changed: ^(cmd/kubeadm|build/debs|pkg/kubelet/certificate|cmd/kubelet/app).*$
      skip_report: true
      spec:
        containers:
        - args:
          - --ssh=/etc/ssh-security/ssh-security
          - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
          - --repo=k8s.io/kubernetes-anywhere=kubeadm-e2e
          - --upload=gs://kubernetes-security-prow/pr-logs
          - --timeout=75
          - --scenario=kubernetes_e2e
          - --
          - --cluster=
          - --deployment=kubernetes-anywhere
          - --gcp-zone=us-central1-f
          - --ginkgo-parallel=30
          - --kubeadm=pull
          - --kubernetes-anywhere-kubernetes-version=ci-cross/latest
          - --provider=kubernetes-anywhere
          - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]
            --minStartupPods=8
          - --timeout=55m
          - --use-shared-build=bazel
          - --gcs-shared=gs://kubernetes-security-prow/bazel
          - --gcp-project=k8s-jkns-pr-gce-etcd3
          env:
          - name: SKIP_RELEASE_VALIDATION
            value: "true"
          image: gcr.io/k8s-testimages/e2e-kubeadm:v20190110-2cba0a6ef
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssh-security
            name: ssh-security
        volumes:
        - name: ssh-security
          secret:
            defaultMode: 256
            secretName: ssh-security
      trigger: (?m)^/test( | .* )pull-security-kubernetes-e2e-kubeadm-gce,?($|\s.*)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    skip_branches:
    - release-1.13
    - release-1.10
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_bazel
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-godeps
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-godeps
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-godeps
    run_if_changed: ^((build\/|Godeps\/|vendor\/|hack\/lib\/|hack\/.*godep|staging\/).*)$
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - make
        - verify
        command:
        - runner.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "Y"
        - name: WHAT
          value: godeps staging-godeps godep-licenses
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: main
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-godeps,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-integration
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-integration
    rerun_command: /test pull-security-kubernetes-integration
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        - --scenario=kubernetes_verify
        - --
        - --branch=${PULL_BASE_REF}
        - --prow
        image: gcr.io/k8s-testimages/bootstrap:v20190110-c23317e88
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-integration,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-integration-podutil
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-integration-podutil
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-integration-podutil
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - ./hack/jenkins/test-dockerized.sh
        command:
        - runner.sh
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-integration-podutil,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-build-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-build-canary
    rerun_command: /test pull-security-kubernetes-bazel-build-canary
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_bazel
        - --timeout=60
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build-canary
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-build-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-test-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test-canary
    rerun_command: /test pull-security-kubernetes-bazel-test-canary
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_execute_bazel
        - --timeout=60
        - --
        - make
        - bazel-test
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-test-integration-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-bazel-test-integration-canary
    rerun_command: /test pull-security-kubernetes-bazel-test-integration-canary
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_execute_bazel
        - --
        - --test=//test/integration/...
        - --test-args=--config=integration
        - --timeout=60
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-bazel-test-integration-canary,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-local-e2e
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 8
    name: pull-security-kubernetes-local-e2e
    optional: true
    rerun_command: /test pull-security-kubernetes-local-e2e
    run_if_changed: (hyperkube|local-up-cluster)
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=140
        - --scenario=kubernetes_e2e
        - --
        - --build=bazel
        - --deployment=local
        - --ginkgo-parallel=1
        - --provider=local
        - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[sig\-apps\]\sDaemon\sset\s\[Serial\]\sshould\srollback\swithout\sunnecessary\srestarts\s\[Conformance\]
        - --timeout=120m
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-local-e2e,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    skip_branches:
    - release-1.10
    - release-1.11
    - release-1.12
    - release-1.13
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.13
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.13
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.12
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.12
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.11
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.11
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.10
    cluster: security
    context: pull-security-kubernetes-typecheck
    decorate: true
    name: pull-security-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-typecheck
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-1.10
        name: main
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-typecheck,?($|\s.*)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-verify
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-verify
    rerun_command: /test pull-security-kubernetes-verify
    skip_branches:
    - master
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --scenario=kubernetes_verify
        - --
        - --branch=${PULL_BASE_REF}
        - --exclude-typecheck
        - --exclude-godep
        - --script=./hack/jenkins/verify-dockerized.sh
        image: gcr.io/k8s-testimages/bootstrap:v20190110-c23317e88
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-verify,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-verify
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-security-kubernetes-verify
    path_alias: k8s.io/kubernetes
    rerun_command: /test pull-security-kubernetes-verify
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - ./hack/jenkins/verify-dockerized.sh
        command:
        - runner.sh
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-master
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( | .* )pull-security-kubernetes-verify,?($|\s.*)
