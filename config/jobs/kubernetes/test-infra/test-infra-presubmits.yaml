presubmits:
  kubernetes/test-infra:
  - name: pull-test-infra-build-smoke
    agent: knative-build
    decorate: true
    build_spec:
      steps:
      - name: first
        image: busybox
        args: ["echo", "hello"]
      - name: second
        image: busybox
        args: ["echo", "world"]
      - name: third
        image: busybox
        args: ["cat", "config/jobs/kubernetes/test-infra/test-infra-presubmits.yaml"]

  - name: pull-test-infra-bazel
    branches:
    - master
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - runner.sh
        - ./scenarios/kubernetes_execute_bazel.py
        args:
        - hack/build-then-unit.sh
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-gubernator
    branches:
    - master
    run_if_changed: 'gubernator|prow/config.yaml'
    decorate: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gubernator:0.4
        command:
        - ./gubernator/test-gubernator.sh
        env:
        - name: WORKSPACE
          value: "/workspace"

  - name: pull-test-infra-lint
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - runner.sh
        - ./scenarios/kubernetes_bazel.py
        args:
        - "--install=gubernator/test_requirements.txt"
        - "--test=//..."
        - "--test-args=--config=lint"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-bazel
    branches:
    - master
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - ./hack/verify-bazel.sh

  - name: pull-test-infra-verify-config
    branches:
    - master
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - runner.sh
        args:
        - ./hack/verify-config.sh
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-config-canary
    branches:
    - master
    path_alias: "k8s.io/test-infra"
    decorate: true
    spec:
      containers:
      - name: test
        command:
        - ./hack/verify-config.sh
        image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        env:
        - name: TEST_TMPDIR
          value: /bazel-scratch/.cache/bazel
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
        volumeMounts:
        - name: bazel-scratch
          mountPath: /bazel-scratch/.cache
      volumes:
      - name: bazel-scratch
        emptyDir: {}

  - name: pull-test-infra-verify-deps
    branches:
    - master
    run_if_changed: '^(Gopkg\.|^vendor/).*$'
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - runner.sh
        args:
        - ./hack/verify-deps.sh
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-codegen
    branches:
    - master
    always_run: true
    path_alias: "k8s.io/test-infra"
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - ./hack/verify-codegen.sh
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-gofmt
    branches:
    - master
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - ./hack/verify-gofmt.sh

  - name: pull-test-infra-verify-govet
    branches:
    - master
    always_run: true
    decorate: true
    path_alias: k8s.io/test-infra
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - runner.sh
        args:
        - ./hack/verify-govet.sh

  - name: pull-test-infra-verify-labels
    branches:
    - master
    run_if_changed: '^label_sync/labels.yaml'
    decorate: true
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190110-49573aea5-experimental
        command:
        - runner.sh
        args:
        - ./hack/verify-labels.sh
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
